def gitRepo2 = "http://bitbucket.jasamarga.co.id:7990/scm/jen/deployment-ocp.git"

//artifactory
def url = 'http://10.1.3.177:8082/artifactory/'
def repo = "jimms"
def jfrogurl = "jfrogartifactory.jasamarga.co.id"

def appName = "jimms"
def tagName = env.tag

def ocpurl = "https://api.ocprd.jasamarga.co.id:6443"
def ocpproject = "jimms-prd"
def configMapName = "jimms-config-prd"

def isNotNewApp = false

pipeline {
    agent {
        label 'master'
    }
    environment {
        GIT_CREDENTIALS = credentials('bitbucket-admin')
    }
    stages {
        stage('preparation') {
            steps {
                script{
                    cleanWs()
                    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'devops-artifactory',usernameVariable: 'artifactoryUsername', passwordVariable: 'artifactoryPassword']]) {
                            sh"""
                                git config --global credential.username $GIT_CREDENTIALS_USR
                                git config --global credential.helper "!echo password=$GIT_CREDENTIALS_PSW; echo"

                                git clone ${gitRepo2}

                                mv ${WORKSPACE}/deployment-ocp/jimms/jimms.yaml ${WORKSPACE}
                                rm -rf ${WORKSPACE}/deployment-ocp
                            """
                            sh"""
                                sudo podman login -u ${artifactoryUsername} -p ${artifactoryPassword} ${jfrogurl}
                                sudo podman pull ${jfrogurl}/${repo}/${appName}:${tagName}
                            """
                    }  
                    echo "success step 1"
                }
            }
        }
        
        stage('Deployment To OCP') {
            steps {
                script{
                    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'ocp-prd',usernameVariable: 'ocpUsername', passwordVariable: 'ocpPassword']]) { 

                        // V2
                        // try{
                        //     sh"""
                        //         oc login ${ocpurl} -u ${ocpUsername} -p ${ocpPassword}
                        //         oc project ${ocpproject}
                        //         oc delete istag ${appName}:${tagName}
                        //     """
                        //     echo "tag deleted"
                        // }catch(Exception e){
                        //     echo "new tag"
                        // }
                        // sh """
                        //     oc login ${ocpurl} -u ${ocpUsername} -p ${ocpPassword}
                        //     oc project ${ocpproject}
                        //     sed -i 's,{NAMESPACE},${ocpproject},g' "$WORKSPACE/jimms.yaml"
                        //     sed -i 's,{CONFIGMAP_NAME},${configMapName},g' "$WORKSPACE/jimms.yaml"
                        //     sed -i 's,{IMAGE_DEPLOY},${jfrogurl}/${repo}/${appName}:${tagName},g' "$WORKSPACE/jimms.yaml"
                        //     oc apply  -n '${ocpproject}' -f $WORKSPACE/jimms.yaml
                        //     oc rollout status deployment/'${appName}' -n '${ocpproject}'
                        //     oc logout
                        //     sudo podman rmi ${jfrogurl}/${repo}/${appName}:${tagName}
                        // """
                        // END OF V2


                        // V1
                        sh"""
                            oc login ${ocpurl} -u ${ocpUsername} -p ${ocpPassword}
                            oc project ${ocpproject}
                        """
                        String pod = sh(script:"oc get pod", returnStdout: true).toString().trim()
                        echo "value pod "+pod
                        if(pod.contains("${appName}")){
                            isNotNewApp = true
                        }else{
                            isNotNewApp = false
                        }
                        if(isNotNewApp){
                            sh"""
                                oc login ${ocpurl} -u ${ocpUsername} -p ${ocpPassword}
                                oc project ${ocpproject}
                                oc delete deploy ${appName}
                                oc delete service ${appName}
                                oc delete route ${appName}
                            """
                            try{
                                sh"""
                                    oc delete istag ${appName}:${tagName}
                                """
                            }catch(Exception e){
                                echo "new tag"
                            }
                            sleep 30
                            sh"""
                                oc new-app --docker-image=${jfrogurl}/${repo}/${appName}:${tagName}
                                oc expose service/${appName} --port=8181-tcp
                                oc set env deploy/${appName} --from=configmap/${configMapName}
                                sudo podman rmi ${jfrogurl}/${repo}/${appName}:${tagName}
                                oc logout
                            """
                        }else{
                            try{
                                sh"""
                                    oc delete istag ${appName}:${tagName}
                                """
                            }catch(Exception e){
                                echo "new tag"
                            }
                            sh"""
                                oc login ${ocpurl} -u ${ocpUsername} -p ${ocpPassword}
                                oc project ${ocpproject}
                                oc new-app --docker-image=${jfrogurl}/${repo}/${appName}:${tagName}
                                oc expose service/${appName} --port=8181-tcp
                                oc set env deploy/${appName} --from=configmap/${configMapName}
                                sudo podman rmi ${jfrogurl}/${repo}/${appName}:${tagName}
                                oc logout
                            """
                        }
                        // END OF V1
                    }
                    echo "success step 2"
                }
            }
        }
    }
}
