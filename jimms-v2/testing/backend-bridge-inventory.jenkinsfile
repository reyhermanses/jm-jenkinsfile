def repoDeploymentFile = "https://gitlab.jasamarga.co.id:8081/riandycandra/devops-deployment-ocp.git"
def deploymentPath = "jimms-v2/dev/be-bridge-inventory.yaml"
def deploymentFile = "be-bridge-inventory.yaml"

//artifactory
def url = 'http://10.1.3.177:8082/artifactory/'
def repo = "jimms-v2"
def jfrogurl = "jfrogartifactory.jasamarga.co.id"

def tagName = env.tags

def ocpurl = "https://api.ocdev.jasamarga.co.id:6443"
def ocpproject = "jimms-v2-testing"
def appName = "be-bridge-inventory"
def configMapName = "be-bridge-inventory-configmap"

pipeline {
    agent {
        label 'master'
    }
    environment {
        GIT_CREDENTIALS = credentials('gitlab-root')
    }
    stages {
        stage('preparation') {
            steps {
                script{
                    cleanWs()
                    // credential isn't required since the repoDeploymentFile is visible public
                    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'devops-artifactory',usernameVariable: 'artifactoryUsername', passwordVariable: 'artifactoryPassword']]) {
                            sh"""
                                git config --global credential.username $GIT_CREDENTIALS_USR
								git config --global credential.helper "!echo password=$GIT_CREDENTIALS_PSW; echo"

								git clone ${repoDeploymentFile}

								mv "${WORKSPACE}/devops-deployment-ocp/${deploymentPath}" "${WORKSPACE}"
								rm -rf "${WORKSPACE}/devops-deployment-ocp"
                            """
                            sh"""
                                sudo podman login -u ${artifactoryUsername} -p ${artifactoryPassword} ${jfrogurl}
                                sudo podman pull ${jfrogurl}/${repo}/${appName}:${tagName}
                            """
                    }  
                    echo "success step 1"
                }
            }
        }
        
        stage('Deployment To OCP') {
            steps {
                script{
                    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'ocp-dev',usernameVariable: 'ocpUsername', passwordVariable: 'ocpPassword']]) { 

                        // V2
                        try{
                            sh"""
                                oc login ${ocpurl} -u ${ocpUsername} -p ${ocpPassword}
                                oc project ${ocpproject}
								oc delete all --selector app=${appName}
								oc delete service/${appName}
								oc delete route/${appName}
                                oc delete istag ${appName}:${tagName}
                            """
                            echo "tag deleted"
                        }catch(Exception e){
                            echo "new tag"
                        }
                        sh """
                            oc login ${ocpurl} -u ${ocpUsername} -p ${ocpPassword}
                            oc project ${ocpproject}
							oc adm policy add-scc-to-user anyuid -z default
                            sed -i 's,{NAMESPACE},${ocpproject},g' "$WORKSPACE/${appName}.yaml"
                            sed -i 's,{CONFIGMAP_NAME},${configMapName},g' "$WORKSPACE/${appName}.yaml"
                            sed -i 's,{IMAGE_DEPLOY},${jfrogurl}/${repo}/${appName}:${tagName},g' "$WORKSPACE/${appName}.yaml"
                            oc apply  -n '${ocpproject}' -f $WORKSPACE/${appName}.yaml
							oc annotate route ${appName} --overwrite haproxy.router.openshift.io/timeout=180s
                            oc rollout restart deployment/'${appName}' -n '${ocpproject}'
                            oc logout
                            sudo podman rmi ${jfrogurl}/${repo}/${appName}:${tagName}
                        """

						try {
							sh """
							oc login ${ocpurl} -u ${ocpUsername} -p ${ocpPassword}
							oc project ${ocpproject}
							oc autoscale deployment/${appName} --min=1 --max=1 --cpu-percent=75
							"""
						}catch(Exception e){
							echo "autoscale is exist"
						}
                        // END OF V2

                    }
                    echo "success step 2"
                }
            }
        }
    }
}
