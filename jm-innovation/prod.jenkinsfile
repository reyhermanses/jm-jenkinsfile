def gitRepo2 = "http://bitbucket.jasamarga.co.id:7990/scm/jen/deployment-ocp.git"

//artifactory
def url = 'http://10.1.3.177:8082/artifactory/'
def repo = "jm-innovation"
def jfrogurl = "jfrogartifactory.jasamarga.co.id"

def appName = "jm-innovation"
def tagName = env.tags

def ocpurl = "https://api.ocprd.jasamarga.co.id:6443"
def ocpproject = "jm-innov-prd"
def configMapName = "jm-innov-config-prd"

def isNotNewApp = false

pipeline {
    agent {
        label 'master'
    }
    environment {
        GIT_CREDENTIALS = credentials('bitbucket-riandy.candra')
    }
    stages {
        stage('preparation') {
            steps {
                script{
                    cleanWs()
                    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'devops-artifactory',usernameVariable: 'artifactoryUsername', passwordVariable: 'artifactoryPassword']]) {
                            sh"""
                                git config --global credential.username $GIT_CREDENTIALS_USR
                                git config --global credential.helper "!echo password=$GIT_CREDENTIALS_PSW; echo"

                                git clone ${gitRepo2}

                                mv ${WORKSPACE}/deployment-ocp/jm-innovation/jm-innovation.yaml ${WORKSPACE}
                                rm -rf ${WORKSPACE}/deployment-ocp
                            """
                            sh"""
                                sudo podman login -u ${artifactoryUsername} -p ${artifactoryPassword} ${jfrogurl}
                                sudo podman pull ${jfrogurl}/${repo}/${appName}:${tagName}
                            """
                    }  
                    echo "success step 1"
                }
            }
        }
        
        stage('Deployment To OCP') {
            steps {
                script{
                    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'ocp-prd',usernameVariable: 'ocpUsername', passwordVariable: 'ocpPassword']]) { 

                        // V2
                        try{
                            sh"""
                                oc login ${ocpurl} -u ${ocpUsername} -p ${ocpPassword}
                                oc project ${ocpproject}
                                oc delete all --selector app=${appName}
                                oc delete service/${appName}
                                oc delete route/${appName}
                                oc delete istag ${appName}:${tagName}
                            """
                            echo "tag deleted"
                        }catch(Exception e){
                            echo "new tag"
                        }
                        sh """
                            oc login ${ocpurl} -u ${ocpUsername} -p ${ocpPassword}
                            oc project ${ocpproject}
							oc adm policy add-scc-to-user anyuid -z default
                            sed -i 's,{NAMESPACE},${ocpproject},g' "$WORKSPACE/jm-innovation.yaml"
                            sed -i 's,{CONFIGMAP_NAME},${configMapName},g' "$WORKSPACE/jm-innovation.yaml"
                            sed -i 's,{IMAGE_DEPLOY},${jfrogurl}/${repo}/${appName}:${tagName},g' "$WORKSPACE/jm-innovation.yaml"
                            oc apply  -n '${ocpproject}' -f $WORKSPACE/jm-innovation.yaml
                            oc rollout restart deployment/'${appName}' -n '${ocpproject}'
                            oc logout
                            sudo podman rmi ${jfrogurl}/${repo}/${appName}:${tagName}
                        """
                        // END OF V2

                    }
                    echo "success step 2"
                }
            }
        }
    }
}
